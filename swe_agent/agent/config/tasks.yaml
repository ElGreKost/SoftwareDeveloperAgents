planner_task:
    description: |
      We're currently solving the following issue within our repository. 
      Here's the issue text:
        ISSUE: {issue}
        REPO: {repo}

        STEPS:
        1. Understand the GitHub Issue:
        2. See all the files in the current directory with FILETOOL_LIST_FILES action:
        3. Clone the repo DELETE
        4. See all the files in the current directory now with the git repo in the file system and create a plan to solve the issue.
        5. Open the files you think should be examined and read the code. 
        6. if you think you have enough information call EDIT FILE so that the Editor can edit the code.
      
      Your current working directory is inside the repo.
      
      The codebase under your current working directory is: 
      
      .
      ├── patches.txt
      ├── _pg.ipynb
      ├── README.md
      ├── simple_error_file.py
      ├── swe_agent
      │   └── agent
      │       ├── agent.py
      │       ├── benchmark.py
      │       ├── config
      │       │   ├── agents.yaml
      │       │   └── tasks.yaml
      │       ├── __init__.py
      │       ├── main.py
      │       └── tools.py
      └── swe_dataset_simple.json


      Now, you're going solve the issue and guide a Code Editor to make changes to the code until you're 
      satisfied with all of the changes he's made. Then you can submit these changes to the code base by 
      simply running the submit command. Note however that you cannot use any interactive
      session commands (e.g. python, vim) in this environment, but you can write
      scripts and run them. E.g. you can write a python script and then run it
      with `python </path/to/script>.py`. Note however that you cannot use 
      any interactive session commands (e.g. python, vim), 

      If you are facing "module not found error", you can install dependencies.
      Example: in case error is "pandas not found", install pandas like this `pip install pandas`
    expected_output: |
      Your response should contain only one of the following actions:
      "EDIT FILE", "PATCH COMPLETED",
      along with a short instruction on what to do next in txt format.
    agent: planner

editor_task:
    description: |
      We're currently solving the following issue within our repository. 
      Here's the issue text:
        ISSUE: {issue}
        REPO: {repo}

      Now, you're going to edit the code on your own, as instructed by the planner. 
      When you've made all the necessary edits, you can return the patch to the planner. Note 
      however that you cannot use any interactive session commands (e.g. python, vim) in this
      environment, nor write and run python scripts.
    expected_output:
      A patch should be generated which fixes the given issue and a PR should be created
    agent: editor